function [net]=google_net_train(imd_dram,imd_dram_valid,imd_double_dram,imd_double_dram_valid,labels,labels_double,labels_valid,labels_double_valid)
save google_net_train
%% this batch training
path('.\accuracy',path);
fprintf('google_net loading... \n');

%net=load('alex-result-single-20190319T001738.mat');
%net = layerGraph(net.net);
%net=net.lgraph_1;

net = load('gnet_105_v1.mat');
net = net.lgraph_2;

%network = net.net;
%net = layerGraph(net.net);

%net = load('result-single-20190319T115902');
%net = net.lgraph_2;

fprintf('net loaded.\n');
fprintf('google_net training begin... \n');
 %% single
% fprintf('(single) \n');
% 
% % options = trainingOptions('sgdm', ...
% % 'MiniBatchSize',50, ...
% % 'MaxEpochs',10, ...
% % 'InitialLearnRate',1e-2, ...
% % 'ValidationData',imd_dram_valid, ...
% % 'ValidationFrequency',3, ...
% % 'ValidationPatience',Inf, ...
% % 'Verbose',true, ...
% % 'Plots','training-progress');
% 
% options = trainingOptions('adam', ...
%     'InitialLearnRate',5e-4 , ...
%     'Shuffle', 'once', ...
%     'SquaredGradientDecayFactor',0.9, ...
%     'MaxEpochs',5, ...
%     'MiniBatchSize',10, ...
%     'ValidationData',imd_dram_valid, ...
%     'ValidationFrequency',3, ...
%     'ValidationPatience',Inf, ...
%     'Verbose',true, ...
%     'Plots','training-progress');
% 
% net = trainNetwork(imd_dram,net,options);
% network = net;
% 
% save(strcat('result-single-',datestr(now,30),'.mat'),'net');
% %% singel validation
% YPred = predict(network,imd_dram_valid);
% fprintf("accuracy: %d percents. \n",100*accuracy(YPred,labels_valid));

%% double
fprintf('(double) \n');

% options = trainingOptions('sgdm', ...
% 'MiniBatchSize',16, ...
% 'MaxEpochs',1, ...
% 'InitialLearnRate',2e-2, ...
% 'ValidationData',imd_dram_valid, ...
% 'ValidationFrequency',3, ...
% 'ValidationPatience',Inf, ...
% 'Verbose',true, ...
% 'Plots','training-progress');

options = trainingOptions('adam', ...
    'InitialLearnRate',1e-3 , ...
    'Shuffle', 'never', ...
    'SquaredGradientDecayFactor',0.9, ...
    'MaxEpochs',5, ...
    'MiniBatchSize',10, ...
    'ValidationData',imd_dram_valid, ...
    'ValidationFrequency',3, ...
    'ValidationPatience',Inf, ...
    'Verbose',true, ...
    'Plots','training-progress');

net = trainNetwork(imd_double_dram,net,options);
network = net;

save(strcat('result-double-',datestr(now,30),'.mat'),'net');
% double validation
YPred = predict(network,imd_double_dram_valid);
fprintf("accuracy: %d %",100*accuracy_double(YPred,labels_double_valid))
fprintf('training ends.\n');