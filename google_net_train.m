function [net]=google_net_train(imd_dram,imd_dram_valid,imd_double_dram,imd_double_dram_valid,labels,labels_double)
path('C:\Users\lin\Desktop\matlab-dnn-contest\accuracy',path);
save google_net_train
%% this batch training
fprintf('google_net loading... \n');

net = load('gnet_105_v1.mat');

fprintf('net loaded.\n');
fprintf('google_net training begin... \n');
%% single
fprintf('(single) \n');

options = trainingOptions('sgdm', ...
'MiniBatchSize',10, ...
'MaxEpochs',10, ...
'InitialLearnRate',1e-4, ...
'ValidationData',imd_dram_valid, ...
'ValidationFrequency',3, ...
'ValidationPatience',Inf, ...
'Verbose',true, ...
'Plots','training-progress');

net = trainNetwork(imd_dram,net.lgraph_2,options);
save(strcat('result-',datestr(now,30),'.mat'),'net');
%% singel validation
YPred = predict(net,imd_dram_valid);
fprintf("accuracy: %d percents. \n",100*accuracy(YPred,labels))

%% double
fprintf('(double) \n');

options = trainingOptions('sgdm', ...
'MiniBatchSize',10, ...
'MaxEpochs',10, ...
'InitialLearnRate',1e-4, ...
'ValidationData',imd_double_dram_valid, ...
'ValidationFrequency',3, ...
'ValidationPatience',Inf, ...
'Verbose',true, ...
'Plots','training-progress');

net_double = trainNetwork(imd_double_dram,net.lgraph_2,options);
save(strcat('result-',datestr(now,30),'.mat'),'net_double');
%% double validation
YPred = predict(net,imd_dram_valid);
fprintf("accuracy: %d %",100*accuracy(YPred,labels_double))

fprintf('training ends.\n');